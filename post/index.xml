<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on dbsmasher blog</title>
    <link>https://www.dbsmasher.com/post/</link>
    <description>Recent content in Posts on dbsmasher blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, all rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Dec 2016 18:38:21 +0000</lastBuildDate>
    
	<atom:link href="https://www.dbsmasher.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On being on call</title>
      <link>https://www.dbsmasher.com/post/on-being-on-call/</link>
      <pubDate>Wed, 07 Dec 2016 18:38:21 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/on-being-on-call/</guid>
      <description>In case you don&amp;rsquo;t follow SysAdvent (in which case, why?? you are missing out on great content every year!), the post on December 6th this year was by Alice Goldfuss. I have tweeted a link to that post that day and since then my tweet has been quoted, responded to and the ensuing &amp;lsquo;conversation&amp;rsquo; has been eyeopening.
A lot of the response has been anger that an operations engineer is advocating for putting developers on call.</description>
    </item>
    
    <item>
      <title>You&#39;ve been upgraded to the latest version of Ghost</title>
      <link>https://www.dbsmasher.com/post/ghost-0-7/</link>
      <pubDate>Sat, 05 Nov 2016 01:43:48 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/ghost-0-7/</guid>
      <description>You&amp;rsquo;ve just upgraded to the latest version of Ghost and we&amp;rsquo;ve made a few changes that you should probably know about!
Woah, why does everything look different? After two years and hundreds of thousands of users, we learned a great deal about what was (and wasn&amp;rsquo;t) working in the old Ghost admin user interface. What you&amp;rsquo;re looking at is Ghost&amp;rsquo;s first major UI refresh, with a strong focus on being more usable and robust all round.</description>
    </item>
    
    <item>
      <title>Capacity planning for databases</title>
      <link>https://www.dbsmasher.com/post/capacity-planning-databases/</link>
      <pubDate>Fri, 25 Mar 2016 03:17:11 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/capacity-planning-databases/</guid>
      <description>Note: This is inspired by Julia Evans&amp;rsquo; recent post about &amp;hellip;.capacity planning ðŸ˜Œ
Ground rules RDBMS Yes..this post is geared for those of us who use MySQL with a single writer at a time and 2 or more read replicas. A lot of what I will talk about here applies differently, or not at all, to multi writer clustered datastores, although those also come with their own set of compromises and caveats.</description>
    </item>
    
    <item>
      <title>2015 in review...2016 here I come</title>
      <link>https://www.dbsmasher.com/post/2015-review/</link>
      <pubDate>Mon, 04 Jan 2016 18:22:21 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/2015-review/</guid>
      <description>This post is inspired by quite a few great posts like this one by Katherine Daniels and Lara Hogan
2015 was a year of lots of changes and lots of growing for me, both professionally and personally. It also had a lot of firsts for me.
Going remote Late in 2014, I announced to Sendgrid that I am about to move to South Florida where my husband has been working for months.</description>
    </item>
    
    <item>
      <title>Using Sensu for DBA tasks</title>
      <link>https://www.dbsmasher.com/post/using-sensu-for-dba-tasks/</link>
      <pubDate>Tue, 03 Nov 2015 21:31:47 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/using-sensu-for-dba-tasks/</guid>
      <description>Sensu for monitoring Here at Sendgrid we spent the last couple of years porting a lot of our service and host monitoring to Sensu. Its solid API support meant we could write all sorts of tooling around it. We also liked the idea of standalone, client side checks that push their status to the Sensu alerting queue asynchronously. If you are new to Sensu or haven&amp;rsquo;t ever read on it, this is a good place to start.</description>
    </item>
    
    <item>
      <title>On Burnout</title>
      <link>https://www.dbsmasher.com/post/on-burnout/</link>
      <pubDate>Wed, 29 Jul 2015 20:23:02 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/on-burnout/</guid>
      <description>The not-so-merry go round There is a lot of talk these days about burnout in our field. A lot of great initiatives to get us tech people to not hide it, not sweep it under the rug.
This is a great start for a more honest conversation about the stresses we all deal with in this industry and yet, a lot of the examples I see of people trying to deal with it is through quitting their current gig, taking a long vacation, then working on finding the next gig.</description>
    </item>
    
    <item>
      <title>Alfred, csshx and terminalception</title>
      <link>https://www.dbsmasher.com/post/alfred-csshx-and-terminalception/</link>
      <pubDate>Fri, 06 Mar 2015 14:47:41 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/alfred-csshx-and-terminalception/</guid>
      <description>Alfred, csshx and terminalception I use Tmux usually but Tmux on the mac has not been playing nice with csshx for me. Something in the dark magic of perl broke with an error that looks like this
 Mar 5 08:58:42 silvias-MacBookPro.local perl[10828] : ImageIO: CGImageDestinationFinalize image destination must have at least one image 2015-03-05 08:58:42.473 perl5.18[10828:2436454] CGImageDestinationFinalize failed for output type &amp;lsquo;public.tiff&amp;rsquo; **** ERROR **** PerlObjCBridge:: convertPerlToObjC(): Referenced thingy not blessed **** ERROR **** PerlObjCBridge:: convertArg() for index 2: convertPerlToObjC() failed **** ERROR **** PerlObjCBridge:: sendObjcMessage: Error converting argument 1 for message &amp;ldquo;setObject:forKey:&amp;rdquo; **** ERROR **** PerlObjCBridge: error [1] sending message [__NSDictionaryM setObject:forKey:] at /System/Library/Perl/Extras/5.</description>
    </item>
    
    <item>
      <title>Learning configuration management as a DBA</title>
      <link>https://www.dbsmasher.com/post/-learning-configuration-management-as-a-dba/</link>
      <pubDate>Fri, 13 Feb 2015 01:49:42 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/-learning-configuration-management-as-a-dba/</guid>
      <description>How it&amp;rsquo;s been Before SendGrid, I used to deploy all my databases by hand. I&amp;rsquo;d have a documentation page (a google doc, internal wiki page&amp;hellip;whatever). And it would be a long bulleted list of &amp;ldquo;Install this, then install this&amp;rdquo;. If you have ever maintained &amp;lsquo;How to&amp;rsquo; documents like that, This picture will eventually ring true.
This was not a good approach, obviously. Especially when small details start changing but the &amp;lsquo;documentation&amp;rsquo; lags behind.</description>
    </item>
    
    <item>
      <title>Scaling MySQL at SendGrid</title>
      <link>https://www.dbsmasher.com/post/scaling-mysql-at-sendgrid/</link>
      <pubDate>Sun, 08 Feb 2015 20:09:47 +0000</pubDate>
      
      <guid>https://www.dbsmasher.com/post/scaling-mysql-at-sendgrid/</guid>
      <description>*Note: This post first appeared at Sendgrid&amp;rsquo;s official blog *
SendGrid is the epitome of catching a tiger by the tail. Our systems were not originally designed to handle the massive scale we deal with today. Adding new features at this scale also presents challenges budding companies donâ€™t yet need to design for. With our growth and overall traffic, we have had to come up with solutions to handle challenges related to simply scaling our datastores.</description>
    </item>
    
  </channel>
</rss>